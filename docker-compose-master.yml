version: '3.8'

services:
  # Core orchestration service - runs as cron job every hour
  match-list-change-detector:
    image: match-list-change-detector:pypi-0.5.2
    container_name: match-list-change-detector
    environment:
      - FOGIS_API_CLIENT_URL=http://fogis-api-client-service:8080
      - LOG_LEVEL=INFO
      - WEBHOOK_URL=http://match-list-processor:5000/process
    volumes:
      - ./data/match-list-change-detector:/app/data
      - ./logs/match-list-change-detector:/app/logs
    networks:
      - fogis-network
    restart: "no"  # Don't restart - will be triggered by cron
    depends_on:
      - fogis-api-client-service
    # Keep container running but idle
    command: ["sleep", "infinity"]

  # Match list processor - runs as one-time job when triggered
  match-list-processor:
    image: match-list-processor:latest
    container_name: match-list-processor
    environment:
      - FOGIS_API_CLIENT_URL=http://fogis-api-client-service:8080
      - CALENDAR_SYNC_URL=http://fogis-calendar-phonebook-sync:5003/sync
      - LOGO_COMBINER_URL=http://team-logo-combiner:5000/combine
      - LOG_LEVEL=INFO
    volumes:
      - ./data/match-list-processor:/app/data
      - ./logs/match-list-processor:/app/logs
    networks:
      - fogis-network
    restart: "no"  # Run as one-time job, don't restart automatically
    depends_on:
      - fogis-api-client-service
      - fogis-calendar-phonebook-sync
      - team-logo-combiner

  # Calendar and phonebook synchronization service
  fogis-calendar-phonebook-sync:
    image: fogis-calendar-phonebook-sync:latest
    container_name: fogis-calendar-phonebook-sync
    environment:
      - FOGIS_USERNAME=Bartek Svaberg
      - FOGIS_PASSWORD=temporary
      - USER_REFEREE_NUMBER=12345  # Replace with actual referee number
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - LOG_LEVEL=INFO
    volumes:
      - ./data/fogis-calendar-phonebook-sync:/app/data
      - ./logs/fogis-calendar-phonebook-sync:/app/logs
      - ./credentials:/app/credentials:ro
    ports:
      - "9083:8000"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Team logo combination service
  team-logo-combiner:
    image: team-logo-combiner:latest
    container_name: team-logo-combiner
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    volumes:
      - ./data/team-logo-combiner:/app/data
      - ./logs/team-logo-combiner:/app/logs
    ports:
      - "9084:5000"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Google Drive service for file management
  google-drive-service:
    image: google-drive-service:latest
    container_name: google-drive-service
    environment:
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - LOG_LEVEL=INFO
    volumes:
      - ./data/google-drive-service:/app/data
      - ./logs/google-drive-service:/app/logs
      - ./credentials:/app/credentials:ro
    ports:
      - "9085:5000"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cron scheduler for match-list-processor (simplified approach)
  cron-scheduler:
    image: docker:latest
    container_name: cron-scheduler
    command: >
      sh -c "
        apk add --no-cache dcron &&
        echo '0 * * * * docker exec match-list-processor python match_list_processor.py >> /var/log/cron.log 2>&1' > /etc/crontabs/root &&
        echo 'Starting cron scheduler for match processing (every hour)...' &&
        echo 'Next run will be at the top of the hour' &&
        crond -f -l 2
      "
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs/cron:/var/log
    networks:
      - fogis-network
    restart: unless-stopped
    depends_on:
      - match-list-processor

networks:
  fogis-network:
    driver: bridge

volumes:
  match-list-data:
  processor-data:
  calendar-data:
  logo-data:
  drive-data:
