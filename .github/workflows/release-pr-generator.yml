name: Release PR Generator

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.0)'
        required: true

jobs:
  generate-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Create release branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout develop
          git pull
          git checkout -b release/v${{ github.event.inputs.version }}
          git push -u origin release/v${{ github.event.inputs.version }}
      
      - name: Collect issues with merged-to-develop label
        id: collect_issues
        run: |
          # Get issues with merged-to-develop label
          ISSUES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues?state=open&labels=merged-to-develop")
          
          # Format issues for PR description
          ISSUE_LIST=""
          ISSUE_REFS=""
          
          echo "$ISSUES" | jq -c '.[]' | while read -r issue; do
            ISSUE_NUMBER=$(echo "$issue" | jq -r '.number')
            ISSUE_TITLE=$(echo "$issue" | jq -r '.title')
            
            # Append to the lists
            ISSUE_LIST="${ISSUE_LIST}- #${ISSUE_NUMBER}: ${ISSUE_TITLE}\n"
            ISSUE_REFS="${ISSUE_REFS}Fixes #${ISSUE_NUMBER}\n"
            
            echo "Found issue #$ISSUE_NUMBER: $ISSUE_TITLE"
          done
          
          # Save to outputs using heredoc syntax
          cat << EOF >> $GITHUB_ENV
          ISSUE_LIST<<EOFLIST
          $ISSUE_LIST
          EOFLIST
          EOF
          
          cat << EOF >> $GITHUB_ENV
          ISSUE_REFS<<EOFREFS
          $ISSUE_REFS
          EOFREFS
          EOF
      
      - name: Create release PR
        run: |
          # Create PR body
          PR_BODY="# Release v${{ github.event.inputs.version }}\n\n## Issues included in this release:\n${{ env.ISSUE_LIST }}\n\n## Changelog\n[Add release notes here]\n\n${{ env.ISSUE_REFS }}"
          
          # Create PR
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls" \
            -d "{
              \"title\": \"Release v${{ github.event.inputs.version }}\",
              \"body\": \"$PR_BODY\",
              \"head\": \"release/v${{ github.event.inputs.version }}\",
              \"base\": \"main\"
            }"
