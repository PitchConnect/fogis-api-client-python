name: Test and Publish

on:
  push:
    branches: [ "main", "develop", "feature/*" ]
  pull_request:
    branches: [ "main", "develop" ]
  release:
    types: [published]  # Trigger when a release is published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source ./.venv/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .[dev]
          pip install docker

      - name: Lint with flake8
        run: |
          source ./.venv/bin/activate
          flake8 fogis_api_client tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 fogis_api_client tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check dependency versions
        run: |
          source ./.venv/bin/activate
          python scripts/check_dependencies.py

      - name: Test with pytest and coverage
        run: |
          source ./.venv/bin/activate
          pytest tests/ --cov=fogis_api_client --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Check Docker setup
        run: |
          # Verify Docker is running
          docker info

          # Show Docker version
          docker --version

          # Show Docker Compose version
          docker compose version

      - name: Run integration tests
        env:
          CI: true
        run: |
          # Create the Docker network
          docker network create fogis-network || true

          # Start the services
          docker compose -f docker-compose.ci.yml up -d fogis-api-client mock-fogis-server

          # Wait for services to start
          sleep 10

          # Show running containers
          docker ps

          # Run the integration tests
          docker compose -f docker-compose.ci.yml run --rm integration-tests

          # Store the exit code
          TEST_EXIT_CODE=$?

          # Show Docker logs for debugging if tests failed
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "Integration tests failed with exit code $TEST_EXIT_CODE"
            echo "\nMock server logs:"
            docker logs mock-fogis-server || true
            echo "\nAPI server logs:"
            docker logs fogis-api-client-dev || true
          fi

          # Return the original exit code
          exit $TEST_EXIT_CODE

  publish:
    needs: build  # Only run after the 'build' job is successful
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: github.event_name == 'release'  # Only run on release events
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          distributions: dist/*
